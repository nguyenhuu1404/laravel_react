import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from "react"
import ReactPaginate from 'react-paginate'
import { getListUserApi, deleteUserApi } from '@/services/API.services'
import Link from 'next/link';
import { toast } from 'react-toastify';

const inter = Inter({ subsets: ['latin'] })

export default function Index() {
    const [loaded, setLoaded] = useState(false);
    const [users, setUsers] = useState([])
    const [sortEmail, setSortEmail] = useState('desc')
    const [pageCount, setPageCount] = useState(1)
    const [currentPage, setCurrentPage] = useState(1)
    const userStatus = {1: 'Active', 2: 'Suspended', 3: 'Deleted'};
    const [search, setSearch] = useState('')

    useEffect(() => {
        getListUserPagination()
    }, [])

    const getListUserPagination = async () => {
        const res = await getListUserApi(currentPage, search, sortEmail)
        setUsers(res.data)
        setPageCount(res.pagination.total_page)
        setLoaded(true)
    }

    const handlePageClick = async (event) => {
        setCurrentPage(event.selected)
        getListUserPagination()
    }

    const handleSearch = () => {
        getListUserPagination()
    }

    const handleDeleteUser = async (userId) => {
        if (!window.confirm("Delete the item?")) {
            return;
        }
        try {
            const res = await deleteUserApi(userId)
            if (res.status) {
                await getListUserPagination()
                toast.success(res.message)
            }
        } catch (e) {
            toast.error(e.message)
        }
    }

    const handleSortEmail = () => {
        if (sortEmail === 'asc') {
            setSortEmail('desc')
        } else {
            setSortEmail('asc')
        }
    }

    useEffect(() => {
        getListUserPagination()
    }, [sortEmail])

  return (
    <>
      <Head>
        <title>List user</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
        {loaded && (
            <>
                <div className="row mt-3">
                    <div className="col-6"><h2>Manager User</h2></div>
                    <div className="col-6">
                        <Link href="/users/create">
                            <button className="btn mb-3 float-end btn-primary" variant="primary">
                                Create user
                            </button>
                        </Link>
                    </div>
                </div>
                <div style={{ width: "300px"}} className="d-flex mb-3 ms-auto justify-content-end">
                    <input className="form-control me-1" onChange={event => setSearch(event.target.value)} value={search} type="search" placeholder="Search" aria-label="Search" />
                    <button className="btn btn-primary" onClick={handleSearch} type="button">Search</button>
                </div>
                <div className="manager-user">
                    <table className="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th scope="col">#ID</th>
                                <th scope="col">Last Name</th>
                                <th scope="col">First Email</th>
                                <th scope="col">
                                    <span onClick={handleSortEmail}>Email</span>
                                    {console.log(sortEmail)}
                                        {sortEmail === 'desc' ?
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sort-down" viewBox="0 0 16 16">
                                                <path d="M3.5 2.5a.5.5 0 0 0-1 0v8.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L3.5 11.293V2.5zm3.5 1a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z"/>
                                            </svg>
                                            :
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sort-up" viewBox="0 0 16 16">
                                                <path d="M3.5 12.5a.5.5 0 0 1-1 0V3.707L1.354 4.854a.5.5 0 1 1-.708-.708l2-1.999.007-.007a.498.498 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L3.5 3.707V12.5zm3.5-9a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z"/>
                                            </svg>
                                        }
                                </th>
                                <th scope="col">Status</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {users && users.length > 0 &&
                                users.map((user, key) => {
                                    return (
                                        <tr key={`list-user-${key}`}>
                                            <th>{user.id}</th>
                                            <td>{user.last_name}</td>
                                            <td>{user.first_name}</td>
                                            <td>{user.email}</td>
                                            <td>{userStatus[user.status]}</td>
                                            <td>
                                                <Link href={`/users/${user.id}`}>
                                                    <button className="btn btn-sm btn-info">View</button>
                                                </Link>
                                                <Link  href={`/users/${user.id}/edit`}>
                                                    <button className="btn ms-2 me-2 btn-sm btn-warning">Edit</button>
                                                </Link>
                                                <button onClick={() => handleDeleteUser(user.id)} className="btn btn-sm btn-danger">Delete</button>
                                            </td>
                                        </tr>
                                    )
                                })}
                            {users && users.length === 0 &&
                                (
                                    <td colSpan={'6'}>No data</td>
                                )}
                        </tbody>
                    </table>
                    <nav aria-label="Page navigation">
                        <ReactPaginate
                            nextLabel="Next >"
                            onPageChange={handlePageClick}
                            pageRangeDisplayed={3}
                            marginPagesDisplayed={2}
                            pageCount={pageCount}
                            previousLabel="< Prev"
                            pageClassName="page-item"
                            pageLinkClassName="page-link"
                            previousClassName="page-item"
                            previousLinkClassName="page-link"
                            nextClassName="page-item"
                            nextLinkClassName="page-link"
                            breakLabel="..."
                            breakClassName="page-item"
                            breakLinkClassName="page-link"
                            containerClassName="pagination"
                            activeClassName="active"
                            renderOnZeroPageCount={null} />
                    </nav>
                </div>
            </>
            )}
        </main>
    </>
  )
}
