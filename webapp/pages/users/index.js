import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from "react"
import ReactPaginate from 'react-paginate'
import { getListUserApi, deleteUserApi } from '@/services/API.services'
import Link from 'next/link';
import { toast } from 'react-toastify';

const inter = Inter({ subsets: ['latin'] })

export default function Index() {
    const [loaded, setLoaded] = useState(false);
    const [users, setUsers] = useState([])
    const [pageCount, setPageCount] = useState(1)
    const [currentPage, setCurrentPage] = useState(1)
    const userStatus = {1: 'Active', 2: 'Suspended', 3: 'Deleted'};

    useEffect(() => {
        getListUserPagination()
    }, [])

    const getListUserPagination = async () => {
        const res = await getListUserApi(currentPage)
        setUsers(res.data)
        setPageCount(res.pagination.total_page)
        setLoaded(true)
    }

    const handlePageClick = async (event) => {
        setCurrentPage(event.selected)
        getListUserPagination()
    }

    const handleDeleteUser = async (userId) => {
        if (!window.confirm("Delete the item?")) {
            return;
        }
        try {
            const res = await deleteUserApi(userId)
            if (res.status) {
                await getListUserPagination()
                toast.success(res.message)
            }
        } catch (e) {
            toast.error(e.message)
        }
    }

  return (
    <>
      <Head>
        <title>List user</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
        {loaded && (
            <>
                <h2>Manager User</h2>
                <div>
                    <Link href="/users/create">
                        <button className="btn mb-3 float-end btn-primary" variant="primary">
                            Create user
                        </button>
                    </Link>
                </div>
                <div className="manager-user">
                    <table className="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th scope="col">#ID</th>
                                <th scope="col">Last Name</th>
                                <th scope="col">First Email</th>
                                <th scope="col">Email</th>
                                <th scope="col">Status</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {users && users.length > 0 &&
                                users.map((user, key) => {
                                    return (
                                        <tr key={`list-user-${key}`}>
                                            <th>{user.id}</th>
                                            <td>{user.last_name}</td>
                                            <td>{user.first_name}</td>
                                            <td>{user.email}</td>
                                            <td>{userStatus[user.status]}</td>
                                            <td>
                                                <Link href={`/users/${user.id}`}>
                                                    <button className="btn btn-sm btn-info">View</button>
                                                </Link>
                                                <Link  href={`/users/${user.id}/edit`}>
                                                    <button className="btn ms-2 me-2 btn-sm btn-warning">Edit</button>
                                                </Link>
                                                <button onClick={() => handleDeleteUser(user.id)} className="btn btn-sm btn-danger">Delete</button>
                                            </td>
                                        </tr>
                                    )
                                })}
                            {users && users.length === 0 &&
                                (
                                    <td colSpan={'6'}>No data</td>
                                )}
                        </tbody>
                    </table>
                    <nav aria-label="Page navigation">
                        <ReactPaginate
                            nextLabel="Next >"
                            onPageChange={handlePageClick}
                            pageRangeDisplayed={3}
                            marginPagesDisplayed={2}
                            pageCount={pageCount}
                            previousLabel="< Prev"
                            pageClassName="page-item"
                            pageLinkClassName="page-link"
                            previousClassName="page-item"
                            previousLinkClassName="page-link"
                            nextClassName="page-item"
                            nextLinkClassName="page-link"
                            breakLabel="..."
                            breakClassName="page-item"
                            breakLinkClassName="page-link"
                            containerClassName="pagination"
                            activeClassName="active"
                            renderOnZeroPageCount={null} />
                    </nav>
                </div>
            </>
            )}
        </main>
    </>
  )
}
